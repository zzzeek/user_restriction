- name: "{{ application_name }}: set variables"
  set_fact:
      controller_account_per_controller: "{{ config_data.controller_account_per_controller }}"
      script_runner: "{{ config_data.script_runner }}"
      tripleo_db_user: "{{ config_data.tripleo_db_user }}"
      containers: "{{ config_data.containers }}"
      database_name: "{{ config_data.tripleo_db_name }}"

- name: "{{ application_name }}: read database info from account_per_controller.conf"
  shell: "{{ script_content }}"
  vars:
    script_content: |
      cat << EOF | {{ script_runner }} bash
      crudini --get {{ controller_account_per_controller }} {{ application_name }} user
      crudini --get {{ controller_account_per_controller }} {{ application_name }} password
      crudini --get {{ controller_account_per_controller }} {{ application_name }} bind_address
      EOF
  register: db_config_command_output

- name: "{{ application_name }}: set existing database URL components"
  set_fact:
    apc_db_user: "{{ db_config_command_output.stdout_lines[0] }}"
    apc_db_password: "{{ db_config_command_output.stdout_lines[1] }}"
    apc_db_bind_address: "{{ db_config_command_output.stdout_lines[2] }}"

- name: "{{ application_name }}: create user"
  shell: |
    {{ mysql_cli }} "GRANT USAGE ON *.* TO '{{ apc_db_user }}'@'{{ apc_db_bind_address }}' IDENTIFIED BY '{{ apc_db_password }}';"
    {{ mysql_cli }} "GRANT ALL PRIVILEGES ON {{ database_name }}.* TO '{{ apc_db_user }}'@'{{ apc_db_bind_address }}';"
  when: enable_apc_grants



- name: "{{ application_name }}: delete user"
  shell: |
    {{ mysql_cli }} "DROP USER IF EXISTS '{{ apc_db_user }}'@'{{ apc_db_bind_address }}'; FLUSH PRIVILEGES "
  when: not enable_apc_grants


