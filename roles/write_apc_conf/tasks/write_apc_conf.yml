- name: "{{ application_name }}: set variables"
  set_fact:
      controller_account_per_controller: "{{ config_data.controller_account_per_controller }}"
      script_runner: "{{ config_data.script_runner }}"
      tripleo_db_user: "{{ config_data.tripleo_db_user }}"

- name: "{{ application_name }}: did we make a password yet"
  shell: "{{ script_runner }} crudini --get {{ controller_account_per_controller }} {{ application_name }} password"
  register: mysql_password_file_output
  ignore_errors: yes

- name: "{{ application_name }}: register password fact from existing"
  set_fact:
    mysql_generated_password: "{{ mysql_password_file_output.stdout_lines[0] }}"
  when: mysql_password_file_output.rc == 0

- name: "{{ application_name }}: create new password if not exists"
  shell: "{{ mysql_cli }} 'SELECT sha2(rand(), 256)'"
  register: mysql_password_generate_output
  when: mysql_password_file_output.rc != 0

- name: "{{ application_name }}: register password fact from generated"
  set_fact:
    mysql_generated_password: "{{ mysql_password_generate_output.stdout_lines[0] }}"
  when: mysql_password_file_output.rc != 0

- name: "{{ application_name }}: determine new user name, derived from controller hostname"
  shell: |
      HOSTNAME=`hostname`
      CONTROLLER_IDX=`echo ${HOSTNAME} | sed 's/overcloud\|controller\|-//g'`
      NEW_USER="{{ tripleo_db_user }}${CONTROLLER_IDX}"
      echo "${NEW_USER}"
  register: username_output

- name: "{{ application_name }}: set username password facts"
  set_fact:
    db_apc_username: "{{ username_output.stdout_lines[0] }}"
    db_apc_password: "{{ mysql_generated_password }}"

- name: "{{ application_name }}: write data to account_per_controller.cnf"
  ini_file:
    path: "{{ controller_account_per_controller }}"
    section: "{{ application_name }}"
    option: "{{ item.parameter_name }}"
    value: "{{ item.value }}"
    seuser: "{{ etc_seuser }}"
    serole: "{{ etc_serole }}"
    setype: "{{ etc_setype }}"
  loop:
    - {parameter_name: "user", value: "{{ db_apc_username }}"}
    - {parameter_name: "password", value: "{{ db_apc_password }}"}
    - {parameter_name: "host", value: "{{ local_ip_address }}"}
    - {parameter_name: "port", value: "{{ local_mysql_port }}"}  # 3307
    - {parameter_name: "bind_address", value: "{{ local_ip_address }}"}

- name: "{{ application_name }}: write data to other account_per_controller.cnf"
  ini_file:
    path: "{{ config_locations[item.0].controller_account_per_controller }}"
    section: "{{ application_name }}"
    option: "{{ item.1.parameter_name }}"
    value: "{{ item.1.value }}"
    seuser: "{{ etc_seuser }}"
    serole: "{{ etc_serole }}"
    setype: "{{ etc_setype }}"
  loop: "{{ files_to_write | product(parameters) | list }}"
  vars:
    parameters:
      - {parameter_name: "user", value: "{{ db_apc_username }}"}
      - {parameter_name: "password", value: "{{ db_apc_password }}"}
      - {parameter_name: "host", value: "{{ local_ip_address }}"}
      - {parameter_name: "port", value: "{{ local_mysql_port }}"}  # 3307
      - {parameter_name: "bind_address", value: "{{ local_ip_address }}"}
    files_to_write: "{{ config_data.write_to_other_apcs }}"
